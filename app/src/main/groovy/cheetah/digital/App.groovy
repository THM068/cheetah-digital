/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package cheetah.digital

import cheetah.digital.constants.DB
import cheetah.digital.dao.CustomerRedissonRepository
import cheetah.digital.model.Customer
import cheetah.digital.services.BootStrapService
import cheetah.digital.verticles.MainVerticle
import groovy.transform.CompileStatic
import io.micronaut.context.BeanContext
import io.vertx.core.AsyncResult
import io.vertx.core.Handler
import io.vertx.core.Vertx
import io.vertx.core.eventbus.Message
import io.vertx.core.json.JsonObject

import java.util.logging.Logger

@CompileStatic
class App {
    static Logger logger = Logger.getLogger("App")

    static void main(String[] args) {
        loadData()
        Vertx.vertx().deployVerticle(new MainVerticle(), App::getHandleDeployment)

    //    Vertx.vertx().eventBus().<Customer>consumer(DB.getCUSTOMER_PROCESS_EVENT_BUS(), App::printCustomer)
    }

    static void printCustomer(Message<JsonObject> handler) {
        //logger.info(handler.body().encodePrettily())
    }

    static void getHandleDeployment(AsyncResult<String> handler) {
        if(handler.succeeded()) {
            logger.info("Deployed verticle ${handler.result()}")
        }
    }

    static void loadData() {
        BeanContext beanContext = BeanContext.run()
        BootStrapService bootStrapService = beanContext.getBean(BootStrapService.class)
        bootStrapService.loadData()
        logger.info("Completed loading customer data to redis")
    }
}
